#MYSQL
slick.dbs.default.driver = "slick.driver.MySQLDriver$"
slick.dbs.default.db.driver = com.mysql.jdbc.Driver
slick.dbs.default.db.url = "jdbc:mysql://localhost/play"
slick.dbs.default.db.user = "root"
slick.dbs.default.db.password = ""

#H2
//slick.dbs.default.driver="slick.driver.H2Driver$"
//slick.dbs.default.db.driver="org.h2.Driver"
//slick.dbs.default.db.url="jdbc:h2:tcp://localhost/c:/some/path/to/MyPlayDB"
//slick.dbs.default.db.user=sa
//slick.dbs.default.db.password=""

play.evolutions.db.default.autoApply = true


#Slick h2 로 변경 ->

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="changeme"

# The application languages
# ~~~~~
play.i18n.langs = ["en", "ko"]

# Registers the error handler
# ~~~~~

play.http {
  errorHandler = "utils.ErrorHandler"
  filters = "utils.Filters"
}

# play-slick configuration
# ~~~~~
//slick.dbs.default.driver="slick.driver.H2Driver$"
//slick.dbs.default.db.driver="org.h2.Driver"
//slick.dbs.default.db.url="jdbc:h2:tcp://localhost/c:/some/path/to/MyPlayDB"
//slick.dbs.default.db.user=sa
//slick.dbs.default.db.password=""

# The application DI modules
# ~~~~~
play.modules {
  enabled += "modules.Module"
  disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
  disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"
}

# Security Filter Configuration - Content Security Policy
# ~~~~~
#play.filters.headers.contentSecurityPolicy
# default-src
# 'self'
# img-src
# 'self'
# fbcdn-profile-a.akamaihd.net (Facebook)
# *.twimg.com (Twitter)
# *.googleusercontent.com (Google)
# *.xingassets.com (Xing)
# vk.com (VK)
# *.yimg.com (Yahoo)
# secure.gravatar.com
# style-src
# 'self'
# 'unsafe-inline'
# cdnjs.cloudflare.com
# maxcdn.bootstrapcdn.com
# cdn.jsdelivr.net
# fonts.googleapis.com
# 'unsafe-inline' (in-line css found in bootstrap.min.js)
# font-src
# 'self'
# fonts.gstatic.com
# fonts.googleapis.com
# cdnjs.cloudflare.com
# script-src
# 'self'
# clef.io
# connect-src
# 'self'
# twitter.com
# *.xing.com
# frame-src
# clef.io
#play.filters.headers.contentSecurityPolicy="default-src 'self'; img-src 'self' fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com; font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com; script-src 'self' clef.io; connect-src 'self' twitter.com *.xing.com; frame-src clef.io"

silhouette {
  authenticator {
    cookieName="id"
    cookiePath="/"
    secureCookie=false # Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
    httpOnlyCookie=true
    useFingerprinting=true
    authenticatorIdleTimeout=30 minutes
    authenticatorExpiry=12 hours

    rememberMe {
      cookieMaxAge=30 days
      authenticatorIdleTimeout=5 days
      authenticatorExpiry=30 days
    }

    cookie.signer {
      key = "[changeme]" # A unique encryption key
      pepper = "-mohiva-silhouette-cookie-signer-" # Constant prepended and appended to the data before signing. When using one key for multiple purposes, using a specific pepper reduces some risks arising from this.
    }
    crypter.key = "[changeme]" # A unique encryption key
  }
}

#include "silhouette.conf"
